<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.aishenhuo.pc.api.myBatis.mapper.XcxCommentMapper">
  <resultMap id="BaseResultMap" type="com.wang.aishenhuo.pc.api.myBatis.model.XcxComment">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="iid" jdbcType="VARCHAR" property="iid" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="zan" jdbcType="INTEGER" property="zan" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="img" jdbcType="LONGVARCHAR" property="img" />
    <result column="reply" jdbcType="LONGVARCHAR" property="reply" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, iid, time, type, zan
  </sql>
  <sql id="Blob_Column_List">
    content, img, reply
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xcx_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xcx_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xcx_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from xcx_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentExample">
    delete from xcx_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentWithBLOBs">
    insert into xcx_comment (id, uid, iid, 
      time, type, zan, content, 
      img, reply)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{iid,jdbcType=VARCHAR}, 
      #{time,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{zan,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}, 
      #{img,jdbcType=LONGVARCHAR}, #{reply,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentWithBLOBs">
    insert into xcx_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="iid != null">
        iid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="zan != null">
        zan,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="reply != null">
        reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="iid != null">
        #{iid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="zan != null">
        #{zan,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentExample" resultType="java.lang.Integer">
    select count(*) from xcx_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update xcx_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.iid != null">
        iid = #{record.iid,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.zan != null">
        zan = #{record.zan,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reply != null">
        reply = #{record.reply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update xcx_comment
    set id = #{record.id,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=VARCHAR},
      iid = #{record.iid,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      zan = #{record.zan,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR},
      img = #{record.img,jdbcType=LONGVARCHAR},
      reply = #{record.reply,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update xcx_comment
    set id = #{record.id,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=VARCHAR},
      iid = #{record.iid,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      zan = #{record.zan,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentWithBLOBs">
    update xcx_comment
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="iid != null">
        iid = #{iid,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="zan != null">
        zan = #{zan,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxCommentWithBLOBs">
    update xcx_comment
    set uid = #{uid,jdbcType=VARCHAR},
      iid = #{iid,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      zan = #{zan,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      img = #{img,jdbcType=LONGVARCHAR},
      reply = #{reply,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wang.aishenhuo.pc.api.myBatis.model.XcxComment">
    update xcx_comment
    set uid = #{uid,jdbcType=VARCHAR},
      iid = #{iid,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      zan = #{zan,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>